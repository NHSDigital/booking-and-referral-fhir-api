<ProxyEndpoint name="default">
  <Flows>
    <Flow name="OptionsPreFlight">
      <Request/>
      <Response>
        <Step>
          <Name>AssignMessage.AddCors</Name>
        </Step>
      </Response>
      <Condition>(request.verb = "OPTIONS") and (request.header.origin != null) and (request.header.Access-Control-Request-Method != null)</Condition>
    </Flow>
    <Flow name="AddPayloadToPing">
      <Description/>
      <Request/>
      <Response>
        <Step>
          <Name>AssignMessage.AddPayloadToPing</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb = "HEAD"))
      </Condition>
    </Flow>
    <Flow name="MetadataEndpoint">
      <Description/>
      <Request>
          <Step>
            <Name>AssignMessage.AddCapabilityStatement</Name>
          </Step>
      </Request>
      <Response/>
      <Condition>(proxy.pathsuffix MatchesPath "/metadata") and ((request.verb = "GET") and (request.header.NHSD-Target-Identifier = null))</Condition>
    </Flow>
    <Flow name="StatusEndpoint">
      <Request>
        <Step>
        <Condition>request.header.apikey = null or private.common.status-endpoint-api-key != request.header.apikey</Condition>
          <Name>RaiseFault.401Unauthorized</Name>
          </Step>
        <Step>
          <Name>ServiceCallout.CallHealthcheckEndpoint</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>javascript.SetStatusResponse</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/_status") and ((request.verb = "GET") or (request.verb = "HEAD"))
      </Condition>
    </Flow>
    <Flow name="CheckVersion">
            <Request>
                <Step>
                    <Name>Javascript.SetnRemoveVersion</Name>
                    <Condition>(request.header.Accept != null)</Condition>
                </Step>
                <Step>
                   <Name>RaiseFault.406PageNotAcceptable</Name>
                   <Condition>proxy.pathsuffix Matches "/DocumentReference*" and versionNumber != "1.1.0"</Condition>
                 </Step>
            </Request>
    </Flow>

  </Flows>
  <PreFlow/>
  <PostClientFlow name="PostClientFlow">
    <Response>
      <Step>
        <Name>FlowCallout.LogToSplunk</Name>
      </Step>
    </Response>
  </PostClientFlow>
  <HTTPProxyConnection>
    <BasePath>{{ SERVICE_BASE_PATH }}</BasePath>
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>
  <RouteRule name="NoRoutePing">
    <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
  </RouteRule>
  <RouteRule name="NoRoute">
    <Condition>(request.verb = "OPTIONS") and (request.header.origin != null) and (request.header.Access-Control-Request-Method != null)</Condition>
  </RouteRule>
  <RouteRule name="NoRouteMetadata">
    <Condition>(proxy.pathsuffix MatchesPath "/metadata") and ((request.verb = "GET") and (request.header.NHSD-Target-Identifier = null))</Condition>
  </RouteRule>
  <RouteRule name="nrlf-producer-sandbox-route">
    <TargetEndpoint>nrlf-producer-sandbox-target</TargetEndpoint>
    <Condition>(proxy.pathsuffix Matches "/DocumentReference/*") or ((proxy.pathsuffix Matches "/DocumentReference*") and (request.verb != "GET")) and versionNumber = "1.1.0"</Condition>
   </RouteRule>
  <RouteRule name="nrlf-consumer-sandbox-route">
    <TargetEndpoint>nrlf-consumer-sandbox-target</TargetEndpoint>
    <Condition>proxy.pathsuffix Matches "/DocumentReference*"and versionNumber Matches "([1-9]\.\d+\.\d+)"</Condition>
  </RouteRule>
    <RouteRule name="sandbox">
    <TargetEndpoint>sandbox</TargetEndpoint>
  </RouteRule>



  <DefaultFaultRule>
    <Step>
      <Name>AssignMessage.Errors.CatchAllMessage</Name>
    </Step>
  </DefaultFaultRule>
</ProxyEndpoint>
