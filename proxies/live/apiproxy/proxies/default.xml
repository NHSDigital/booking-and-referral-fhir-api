<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
  <PreFlow>
    <Request>
      <Step>
        <Name>FlowCallout.ApplyRateLimiting</Name>
      </Step>
      <Step>
        <Name>AssignMessage.SetApimGuids</Name>
      </Step>
    </Request>
  </PreFlow>
  <Flows>
    <Flow name="OptionsPreFlight">
      <Request/>
      <Response>
        <Step>
          <Name>AssignMessage.AddCors</Name>
        </Step>
      </Response>
      <Condition>(request.verb = "OPTIONS") and (request.header.origin != null) and (request.header.Access-Control-Request-Method != null)</Condition>
    </Flow>
    <Flow name="AddPayloadToPing">
      <Description/>
      <Request/>
      <Response>
        <Step>
          <Name>AssignMessage.AddPayloadToPing</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
    </Flow>
    <Flow name="CapabilityStatement">
      <Response>
        <Step>
          <Name>AssignMessage.AddCapabilityStatement</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/metadata") and ((request.verb = "GET") and (request.header.NHSD-Target-Identifier = null))</Condition>
    </Flow>
    <Flow name="Checks">
      <Request>
        <Step>
          <Name>OauthV2.VerifyAccessToken</Name>
        </Step>
        <Step>
          <Condition>(request.header.Accept != null)</Condition>
          <Name>Javascript.SetnRemoveVersion</Name>
        </Step>
        <Step>
          <Name>Javascript.ValidateRequest</Name>
        </Step>
        <Step>
          <Name>RaiseFault.InvalidRequest</Name>
          <Condition>validation.error != null</Condition>
        </Step>
      </Request>
      <Condition>(proxy.pathsuffix Not Matches "/_ping") and (proxy.pathsuffix Not Matches "/_status") and (proxy.pathsuffix Not Matches "/_cache")</Condition>
    </Flow>
  </Flows>
  <PostClientFlow name="PostClientFlow">
    <Response>
      <Step>
        <Name>FlowCallout.LogToSplunk</Name>
      </Step>
    </Response>
  </PostClientFlow>
  <HTTPProxyConnection>
    <BasePath>{{ SERVICE_BASE_PATH }}</BasePath>
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>
  <RouteRule name="NoRoute">
    <Condition>(request.verb = "OPTIONS") and (request.header.origin != null) and (request.header.Access-Control-Request-Method != null)</Condition>
  </RouteRule>
  <RouteRule name="NoRoutePing">
    <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb = "HEAD")) </Condition>
  </RouteRule>
  <RouteRule name="CapabilityStatement">
    <Condition>(proxy.pathsuffix MatchesPath "/metadata") and ((request.verb = "GET") and (request.header.NHSD-Target-Identifier = null))</Condition>
  </RouteRule>
  <RouteRule name="nrlf-producer-route">
    <TargetEndpoint>nrlf-producer-target</TargetEndpoint>
    <Condition>(proxy.pathsuffix Matches "/DocumentReference/*") or ((proxy.pathsuffix Matches "/DocumentReference*") and (request.verb != "GET")) and versionNumber = "1.1.0"</Condition>
   </RouteRule>
  <RouteRule name="nrlf-consumer-route">
    <TargetEndpoint>nrlf-consumer-target</TargetEndpoint>
    <Condition>proxy.pathsuffix Matches "/DocumentReference*" and versionNumber = "1.1.0"</Condition>
  </RouteRule>
  <RouteRule name="booking-and-referral-target">
    <TargetEndpoint>booking-and-referral-target</TargetEndpoint>
  </RouteRule>
  <DefaultFaultRule>
    <Step>
      <Name>Javascript.HandleErrors</Name>
    </Step>
    <Step>
      <Name>AssignMessage.SetErrorResponse</Name>
    </Step>
  </DefaultFaultRule>
</ProxyEndpoint>
